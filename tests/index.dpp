import::component.console;

pragma::option.allspc,true;

pragma::option.warnings,default;

const::define.bool,DEBUG_OPTION,false;

pragma::option.debug,DEBUG_OPTION;

import::component.system;
import::component.samp;
import::module,"test";

system.rem,"Basic println example.";
console.println,"Hual is a fucking bitch";

public&form.testfunc;
do;
	console.println,"testfunc works.";
	console.println,"testfunc works.";
end;

public&form.NewTestFunc;
do;
	console.println,"OH YEAH MAN";
end;

user.testfunc;
user.NewTestFunc;

system.rem,"=================== NATIVES ===================";

system.rem,"a_samp for D++";

const::define.int,MAX_PLAYERS,1000;
const::define.int,MAX_ACTORS,1000;
const::define.int,MAX_VEHICLES,2000;

samp.SetGameModeText,"d++ test";
samp.SetMaxPlayers,MAX_PLAYERS;

system.rem,"===================FUNCS===================";

public&form.testFunc;
do;
	console.println,"testFunc was called.";
	return.str,"testFunc returned this.";
end;

const::define.str,LMAO,"Lmao";

public&form.disableDebug;
do;
	console.println,"Debug disabled";
	return.str,LMAO;
end;

console.println,testFunc;
console.println,disableDebug;

system.rem,"===================CALLBACKS===================";


auto&form.main;
do;
	console.println,"Hello World from main";
	return.int,1;
end;

auto&form.OnGameModeInit;
do;
	console.println,"OnGameModeInit works";
	return.int,1;
	console.println,"RETURN FAILED";
	console.println,"OMG LOL HAHAHAH RETURN DOES NOT WORK";
end;

hook&form.OnGameModeInit;
do;
	console.println,"OnGameModeInit works twice!!!";
	return.int,1;
end;

auto&form.OnGameModeExit;
do;
	console.println,"OnGameModeExit works";
	return.bool,true;
end;

import::module,"vars";
import::module,"math";
import::module,"class";
import::module,"args";
import::module,"discord";
import::module,"files";
import::module,"inline";
import::module,"tasks";
import::module,"struct";
import::module,"iter";