
iter::define,testiter,100;
new.int,foreachtestvar=0;

iter::add,testiter,1;
iter::add,testiter,10;
iter::remove,testiter,1;

foreach.int&var,foreachtestvar,testiter->console.println("foreach test {foreachtestvar}");

iter::add,testiter,1;

foreach.int&var,foreachtestvar,testiter->console.println("foreach test #2 {foreachtestvar}");

console.cout.log(sizeof?testiter);

#undef:testiter;

console.cout(1); console.println("Lmao ok");

public&class.IterClass;
<;
	iter::define,iter,10;
>;

iter::add,IterClass:iter,364;
foreach.int&var,foreachtestvar,IterClass:iter->console.println("foreach test #3 {foreachtestvar}");

if.equ,defined?IterClass:iter,1->console.println("IterClass:iter is defined!");
if.equ,defined?IterClass:iter,0->console.println("IterClass:iter is NOT defined!");
if.equ,defined?foreachtestvar,1->console.println("foreachtestvar is defined!");
if.equ,defined?dummyvar,1->console.println.log("This should not be printed!!");

new.int,switchtest=23;
switch,switchtest;
case,1->console.println("switchtest is 1");
case,23->console.println("switchtest is 23");
case,2->console.println.log("switchtest is 2");

console.println.log("This should be in dpp.log in scriptfiles/");


form&method.TestMethod?text;
{;
	console.println("Printed: {text@TestMethod}");
	return.int,1;
};

console.println.TestMethod("Method test #1");


public&class.MethodClass;
<;
	form&method.TestMethod?text;
	{;
		console.println.log("Printed: {text@MethodClass:TestMethod}");
		return.int,1;
	};
>;

console.println.MethodClass:TestMethod("Method test #2");


public&class.SAMP;
<;
	iter::define,Player,MAX_PLAYERS;
>;

hook&form.OnPlayerConnect?playerid;
{;
	iter::add,SAMP:Player,playerid@OnPlayerConnect;
};

hook&form.OnPlayerDisconnect?playerid;
{;
	iter::remove,SAMP:Player,playerid@OnPlayerConnect;
};

public&task.PrintPlayers#1000;
{;
	foreach.int&var,foreachtestvar,SAMP:Player->console.println("foreach test #4 {foreachtestvar}");

};
